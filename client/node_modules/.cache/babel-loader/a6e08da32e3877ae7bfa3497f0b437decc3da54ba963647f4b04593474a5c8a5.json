{"ast":null,"code":"var _jsxFileName = \"/home/gamze/Development/code/phase-5/SaleSight-project/client/src/pages/ErrorPage.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ErrorPage() {\n  _s();\n  // Redirect to login page when user tries to access an unauthorized route\n  // This is a workaround to avoid navigation errors when trying to access unauthorized routes\n  // Replace with a real authorization logic when implementing the authentication system\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigate(\"/login\", {\n      replace: true\n    });\n  }, [navigate]);\n\n  // Display different error information based on the structure\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center p-8 mt-8\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-red-600 font-bold text-2md\",\n      children: \"Something went wrong...Please check the URL address you have entered.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(ErrorPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = ErrorPage;\nexport default ErrorPage;\nvar _c;\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"names":["Link","useNavigate","React","useEffect","jsxDEV","_jsxDEV","ErrorPage","_s","navigate","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gamze/Development/code/phase-5/SaleSight-project/client/src/pages/ErrorPage.js"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\n\n\nfunction ErrorPage() {\n\n  // Redirect to login page when user tries to access an unauthorized route\n  // This is a workaround to avoid navigation errors when trying to access unauthorized routes\n  // Replace with a real authorization logic when implementing the authentication system\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigate(\"/login\", { replace: true });\n  }, [navigate]);\n\n\n  // Display different error information based on the structure\n  return (\n    <div className=\"flex flex-col justify-center items-center p-8 mt-8\">\n      <h1 className=\"text-red-600 font-bold text-2md\">\n        Something went wrong...Please check the URL address you have entered.\n      </h1>\n    </div>\n  );\n}\n\nexport default ErrorPage;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEnB;EACA;EACA;EACA,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9BE,SAAS,CAAC,MAAM;IACdK,QAAQ,CAAC,QAAQ,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;EACvC,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;;EAGd;EACA,oBACEH,OAAA;IAAKK,SAAS,EAAC,oDAAoD;IAAAC,QAAA,eACjEN,OAAA;MAAIK,SAAS,EAAC,iCAAiC;MAAAC,QAAA,EAAC;IAEhD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACR,EAAA,CAnBQD,SAAS;EAAA,QAKCL,WAAW;AAAA;AAAAe,EAAA,GALrBV,SAAS;AAqBlB,eAAeA,SAAS;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}