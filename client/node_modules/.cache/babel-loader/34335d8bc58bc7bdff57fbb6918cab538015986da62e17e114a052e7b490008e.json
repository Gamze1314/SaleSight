{"ast":null,"code":"var _jsxFileName = \"/home/gamze/Development/code/phase-5/SaleSight-project/client/src/pages/ErrorPage.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ErrorPage() {\n  _s();\n  // Redirect to login page when user tries to access an unauthorized route\n  // This is a workaround to avoid navigation errors when trying to access unauthorized routes\n  // Replace with a real authorization logic when implementing the authentication system\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigate(\"/login\", {\n      replace: true\n    });\n  }, [navigate]);\n  // Display different error information based on the structure\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center p-8 mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-red-600 font-bold text-2md\",\n      children: \"Something went wrong...Please check the URL address you have entered.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-600 text-white p-2 rounded mt-10\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/authentication\",\n        children: \"Return Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(ErrorPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = ErrorPage;\nexport default ErrorPage;\nvar _c;\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"names":["Link","useNavigate","jsxDEV","_jsxDEV","ErrorPage","_s","navigate","useEffect","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/gamze/Development/code/phase-5/SaleSight-project/client/src/pages/ErrorPage.js"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\n\nfunction ErrorPage() {\n\n  // Redirect to login page when user tries to access an unauthorized route\n  // This is a workaround to avoid navigation errors when trying to access unauthorized routes\n  // Replace with a real authorization logic when implementing the authentication system\n  const navigate = useNavigate();\n  useEffect(() => {\n    navigate(\"/login\", { replace: true });\n  }, [navigate]);\n  // Display different error information based on the structure\n  return (\n    <div className=\"flex flex-col justify-center items-center p-8 mt-8\">\n      <h1 className=\"text-red-600 font-bold text-2md\">\n        Something went wrong...Please check the URL address you have entered.\n      </h1>\n      <button className=\"bg-blue-600 text-white p-2 rounded mt-10\">\n        <Link to=\"/authentication\">Return Home Page</Link>\n      </button>\n    </div>\n  );\n}\n\nexport default ErrorPage;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEnB;EACA;EACA;EACA,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9BM,SAAS,CAAC,MAAM;IACdD,QAAQ,CAAC,QAAQ,EAAE;MAAEE,OAAO,EAAE;IAAK,CAAC,CAAC;EACvC,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EACd;EACA,oBACEH,OAAA;IAAKM,SAAS,EAAC,oDAAoD;IAAAC,QAAA,gBACjEP,OAAA;MAAIM,SAAS,EAAC,iCAAiC;MAAAC,QAAA,EAAC;IAEhD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLX,OAAA;MAAQM,SAAS,EAAC,0CAA0C;MAAAC,QAAA,eAC1DP,OAAA,CAACH,IAAI;QAACe,EAAE,EAAC,iBAAiB;QAAAL,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACT,EAAA,CApBQD,SAAS;EAAA,QAKCH,WAAW;AAAA;AAAAe,EAAA,GALrBZ,SAAS;AAsBlB,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}