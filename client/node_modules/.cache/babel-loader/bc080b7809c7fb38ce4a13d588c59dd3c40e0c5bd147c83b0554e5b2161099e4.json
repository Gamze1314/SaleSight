{"ast":null,"code":"var _jsxFileName = \"/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/ProfitContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProfitContext = /*#__PURE__*/createContext([]); // Initialize context\n\nexport const ProfitProvider = ({\n  children\n}) => {\n  _s();\n  const [profitsData, setProfitsData] = useState([]); // State for profit data\n  const [error, setError] = useState(null); // Error state for ProfitContext\n\n  // Fetch profits data on component mount\n  useEffect(() => {\n    // Function to manage profit data\n    const fetchProfitsData = async () => {\n      try {\n        const res = await fetch(\"/profits\"); // Fetch profits data\n        if (res.ok) {\n          const data = await res.json(); // Parse JSON data\n          setProfitsData(data); // Update profits data state\n        } else {\n          throw new Error(\"Failed to fetch profits data\");\n        }\n      } catch (err) {\n        setError(err); // Set error state\n        console.error(err); // Log error\n      }\n    };\n    fetchProfitsData();\n  }, []);\n  console.log(profitsData);\n\n  // Function to clear the error state\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(ProfitContext.Provider, {\n    value: {\n      profitsData,\n      error,\n      clearError\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfitProvider, \"dSihPvTrcJwK+lSzSr6hTv9f49M=\");\n_c = ProfitProvider;\nvar _c;\n$RefreshReg$(_c, \"ProfitProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","ProfitContext","ProfitProvider","children","_s","profitsData","setProfitsData","error","setError","fetchProfitsData","res","fetch","ok","data","json","Error","err","console","log","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/ProfitContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nexport const ProfitContext = createContext([]); // Initialize context\n\nexport const ProfitProvider = ({ children }) => {\n  const [profitsData, setProfitsData] = useState([]); // State for profit data\n  const [error, setError] = useState(null); // Error state for ProfitContext\n\n\n  // Fetch profits data on component mount\n  useEffect(() => {\n    // Function to manage profit data\n    const fetchProfitsData = async () => {\n      try {\n        const res = await fetch(\"/profits\"); // Fetch profits data\n        if (res.ok) {\n          const data = await res.json(); // Parse JSON data\n          setProfitsData(data); // Update profits data state\n        } else {\n          throw new Error(\"Failed to fetch profits data\");\n        }\n      } catch (err) {\n        setError(err); // Set error state\n        console.error(err); // Log error\n      }\n    };\n\n    fetchProfitsData();\n  }, []);\n\n  console.log(profitsData)\n\n  // Function to clear the error state\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <ProfitContext.Provider value={{ profitsData, error, clearError }}>\n      {children} {/* Render child components */}\n    </ProfitContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,aAAa,gBAAGH,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;;AAEhD,OAAO,MAAMI,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAG1C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;QACrC,IAAID,GAAG,CAACE,EAAE,EAAE;UACV,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;UAC/BR,cAAc,CAACO,IAAI,CAAC,CAAC,CAAC;QACxB,CAAC,MAAM;UACL,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;QACjD;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,CAAC,CAAC,CAAC;QACfC,OAAO,CAACV,KAAK,CAACS,GAAG,CAAC,CAAC,CAAC;MACtB;IACF,CAAC;IAEDP,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAENQ,OAAO,CAACC,GAAG,CAACb,WAAW,CAAC;;EAExB;EACA,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvBX,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACER,OAAA,CAACC,aAAa,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,WAAW;MAAEE,KAAK;MAAEY;IAAW,CAAE;IAAAhB,QAAA,GAC/DA,QAAQ,EAAC,GAAC;EAAA;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE7B,CAAC;AAACrB,EAAA,CAtCWF,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}