{"ast":null,"code":"var _jsxFileName = \"/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null); // Initial value null\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  //user state variable to be provided to the entire app.\n  const [currentUser, setCurrentUser] = useState(null);\n  const [error, setError] = useState(null); // Error state\n\n  // Check session on mount\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        const response = await fetch(\"/check_session\");\n        if (response.ok) {\n          const user = await response.json();\n          setCurrentUser(user);\n        }\n      } catch (err) {\n        setError(\"Failed to check session\");\n        console.error(err);\n      }\n    };\n    checkSession();\n  }, []);\n\n  // Function to log in the user\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await fetch(\"/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setCurrentUser(data);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"Failed to log in\");\n      }\n    } catch (err) {\n      setError(\"Login request failed\");\n      console.error(err);\n    }\n  };\n  const handleLogout = async () => {\n    try {\n      await fetch(\"/logout\", {\n        method: \"DELETE\"\n      });\n      setCurrentUser(null);\n    } catch (err) {\n      setError(\"Failed to log out\");\n      console.error(err);\n    }\n  };\n  const handleSignUp = () => {};\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser,\n      handleLogin,\n      handleLogout,\n      error // Provide error state\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"oSdjOK/QGtCVLV9l7M679krUsYs=\");\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","error","setError","checkSession","response","fetch","ok","user","json","err","console","handleLogin","username","password","method","headers","body","JSON","stringify","data","errorData","message","handleLogout","handleSignUp","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nconst AuthContext = createContext(null); // Initial value null\n\nconst AuthProvider = ({ children }) => {\n    //user state variable to be provided to the entire app.\n  const [currentUser, setCurrentUser] = useState(null);\n  const [error, setError] = useState(null); // Error state\n\n  // Check session on mount\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        const response = await fetch(\"/check_session\");\n        if (response.ok) {\n          const user = await response.json();\n          setCurrentUser(user);\n        }\n      } catch (err) {\n        setError(\"Failed to check session\");\n        console.error(err);\n      }\n    };\n\n    checkSession();\n  }, []);\n\n  // Function to log in the user\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await fetch(\"/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username, password }),\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setCurrentUser(data);\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"Failed to log in\");\n      }\n    } catch (err) {\n      setError(\"Login request failed\");\n      console.error(err);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await fetch(\"/logout\", {\n        method: \"DELETE\",\n      });\n      setCurrentUser(null);\n    } catch (err) {\n      setError(\"Failed to log out\");\n      console.error(err);\n    }\n  };\n\n  const handleSignUp = () => {\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        setCurrentUser,\n        handleLogin,\n        handleLogout,\n        error, // Provide error state\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthProvider, AuthContext };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}