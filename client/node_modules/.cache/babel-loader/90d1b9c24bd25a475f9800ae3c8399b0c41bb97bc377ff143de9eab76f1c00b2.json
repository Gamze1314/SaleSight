{"ast":null,"code":"var _jsxFileName = \"/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\n// import AuthContext to keep current user in state\n// send POST request to backend to log the user in.\n// update state if logged out.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null); // initial value null\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    fetch(\"/check_session\").then(response => {\n      if (response.ok) {\n        response.json().then(user => setCurrentUser(user));\n      }\n    });\n  }, []);\n  useEffect(() => {\n    // send POST request to /users to log the user in.\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: \"exampleUser\",\n        password: \"examplePassword\" // replace with actual user info.\n        // add other fields as needed.\n      })\n    }).then(res => res.json()).then(data => setCurrentUser(data));\n  }, []);\n  function handleLogout() {\n    fetch(\"/logout\", {\n      method: \"DELETE\"\n    }).then(() => setCurrentUser(null));\n  }\n\n  // handle errors and response status.\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser,\n      // update the current user state.\n      handleLogout // log the user out.\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"OV9yLRz34hG/VYz7P4+j1dZgWH0=\");\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","fetch","then","response","ok","json","user","method","headers","body","JSON","stringify","username","password","res","data","handleLogout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n// import AuthContext to keep current user in state\n// send POST request to backend to log the user in.\n// update state if logged out.\n\nconst AuthContext = createContext(null);  // initial value null\n\nconst AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n\n\n    useEffect(() => {\n        fetch(\"/check_session\").then((response) => {\n          if (response.ok) {\n            response.json().then((user) => setCurrentUser(user));\n          }\n        });\n    }, []);\n\n    useEffect(() => {\n        // send POST request to /users to log the user in.\n        fetch(\"/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: \"exampleUser\",\n            password: \"examplePassword\",  // replace with actual user info.\n            // add other fields as needed.\n          }),\n        })\n          .then((res) => res.json())\n          .then((data) => setCurrentUser(data));\n    },[]);\n\n    function handleLogout() {\n        fetch(\"/logout\", {\n          method: \"DELETE\",\n        }).then(() => setCurrentUser(null));\n    }\n\n    // handle errors and response status.\n\n      return (\n        <AuthContext.Provider\n          value={{\n            currentUser,\n            setCurrentUser, // update the current user state.\n            handleLogout, // log the user out.\n          }}\n        >\n          {children}\n        </AuthContext.Provider>\n      );\n\n\n}\n\n\nexport { AuthProvider, AuthContext}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AACjE;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,gBAAGH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAE;;AAE1C,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAGpDC,SAAS,CAAC,MAAM;IACZU,KAAK,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACzC,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACfD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEI,IAAI,IAAKN,cAAc,CAACM,IAAI,CAAC,CAAC;MACtD;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACZ;IACAU,KAAK,CAAC,QAAQ,EAAE;MACdM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAE,aAAa;QACvBC,QAAQ,EAAE,iBAAiB,CAAG;QAC9B;MACF,CAAC;IACH,CAAC,CAAC,CACCX,IAAI,CAAEY,GAAG,IAAKA,GAAG,CAACT,IAAI,CAAC,CAAC,CAAC,CACzBH,IAAI,CAAEa,IAAI,IAAKf,cAAc,CAACe,IAAI,CAAC,CAAC;EAC3C,CAAC,EAAC,EAAE,CAAC;EAEL,SAASC,YAAYA,CAAA,EAAG;IACpBf,KAAK,CAAC,SAAS,EAAE;MACfM,MAAM,EAAE;IACV,CAAC,CAAC,CAACL,IAAI,CAAC,MAAMF,cAAc,CAAC,IAAI,CAAC,CAAC;EACvC;;EAEA;;EAEE,oBACEN,OAAA,CAACC,WAAW,CAACsB,QAAQ;IACnBC,KAAK,EAAE;MACLnB,WAAW;MACXC,cAAc;MAAE;MAChBgB,YAAY,CAAE;IAChB,CAAE;IAAAnB,QAAA,EAEDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAI/B,CAAC;AAAAxB,EAAA,CAlDKF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAqDlB,SAASA,YAAY,EAAED,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}