{"ast":null,"code":"var _jsxFileName = \"/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/CostContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CostContext = /*#__PURE__*/createContext([]); // Initialize context\n\nexport const CostProvider = ({\n  children\n}) => {\n  _s();\n  const [costData, setCostData] = useState([]); // State for cost data\n  const [error, setError] = useState(null); // Error state for CostContext\n\n  // Function to manage cost data\n  const fetchCostData = async () => {\n    try {\n      const res = await fetch(\"/costs\"); // Fetch costs data from the API\n      if (res.ok) {\n        const data = await res.json(); // Parse JSON data\n        setCostData(data); // Update costs data state\n      } else {\n        throw new Error(\"Failed to fetch products' costs data\"); // Throw error if response is not ok\n      }\n    } catch (err) {\n      setError(err); // Set error state\n      console.error(err); // Log error to the console\n    }\n  };\n\n  // Fetch costs data on component mount\n  useEffect(() => {\n    fetchCostData();\n  }, []);\n  console.log(costData);\n\n  // Function to clear the error state\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(CostContext.Provider, {\n    value: {\n      costData,\n      error,\n      clearError\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CostProvider, \"EhlUqgZgsubV32ePeiyxWWZ6dLs=\");\n_c = CostProvider;\nvar _c;\n$RefreshReg$(_c, \"CostProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","CostContext","CostProvider","children","_s","costData","setCostData","error","setError","fetchCostData","res","fetch","ok","data","json","Error","err","console","log","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/CostContext.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nexport const CostContext = createContext([]); // Initialize context\n\nexport const CostProvider = ({ children }) => {\n  const [costData, setCostData] = useState([]); // State for cost data\n  const [error, setError] = useState(null); // Error state for CostContext\n\n  // Function to manage cost data\n  const fetchCostData = async () => {\n    try {\n      const res = await fetch(\"/costs\"); // Fetch costs data from the API\n      if (res.ok) {\n        const data = await res.json(); // Parse JSON data\n        setCostData(data); // Update costs data state\n      } else {\n        throw new Error(\"Failed to fetch products' costs data\"); // Throw error if response is not ok\n      }\n    } catch (err) {\n      setError(err); // Set error state\n      console.error(err); // Log error to the console\n    }\n  };\n\n  // Fetch costs data on component mount\n  useEffect(() => {\n    fetchCostData();\n  }, []);\n\n  console.log(costData)\n\n  // Function to clear the error state\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <CostContext.Provider value={{ costData, error, clearError }}>\n      {children} {/* Render child components */}\n    </CostContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;;AAE9C,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;MACnC,IAAID,GAAG,CAACE,EAAE,EAAE;QACV,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/BR,WAAW,CAACO,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZR,QAAQ,CAACQ,GAAG,CAAC,CAAC,CAAC;MACfC,OAAO,CAACV,KAAK,CAACS,GAAG,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACdY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENQ,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;;EAErB;EACA,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvBX,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,QAAQ;MAAEE,KAAK;MAAEY;IAAW,CAAE;IAAAhB,QAAA,GAC1DA,QAAQ,EAAC,GAAC;EAAA;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE3B,CAAC;AAACrB,EAAA,CArCWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}