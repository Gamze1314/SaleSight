{"ast":null,"code":"var _jsxFileName = \"/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/SalesContext.js\",\n  _s = $RefreshSig$();\n//  /sale GET request. updates state.\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SalesContext = /*#__PURE__*/createContext([]);\nexport const SalesProvider = ({\n  children\n}) => {\n  _s();\n  const [salesData, setSalesData] = useState([]);\n  const [error, setError] = useState(null); // error state for saleContext\n\n  // function to manage sale data\n\n  //fetchSalesData()\n  useEffect(() => {\n    const fetchSalesData = async () => {\n      try {\n        const res = await fetch(\"/product_sales\");\n        if (res.ok) {\n          const data = await res.json();\n          setSalesData(data);\n        }\n      } catch (err) {\n        setError(err);\n        console.error(err);\n      }\n    };\n    fetchSalesData();\n  }, []);\n\n  // clear error state\n  // Function to clear the error state\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(SalesContext.Provider, {\n    value: {\n      salesData,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SalesProvider, \"pcxlSIVNamYWSqeav5Vol/VsSRI=\");\n_c = SalesProvider;\nvar _c;\n$RefreshReg$(_c, \"SalesProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","SalesContext","SalesProvider","children","_s","salesData","setSalesData","error","setError","fetchSalesData","res","fetch","ok","data","json","err","console","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gamze/Development/code/phase-5/SaleSight-project/client/src/context/SalesContext.js"],"sourcesContent":["//  /sale GET request. updates state.\n\nimport React, { useState , useEffect, createContext } from 'react';\n\nexport const SalesContext = createContext([])\n\nexport const SalesProvider = ({ children }) => {\n  const [salesData, setSalesData] = useState([]);\n  const [error, setError] = useState(null); // error state for saleContext\n\n  // function to manage sale data\n\n  //fetchSalesData()\n  useEffect(() => {\n    const fetchSalesData = async () => {\n      try {\n        const res = await fetch(\"/product_sales\");\n        if (res.ok) {\n          const data = await res.json();\n          setSalesData(data);\n        }\n      } catch (err) {\n        setError(err);\n        console.error(err);\n      }\n    };\n\n    fetchSalesData();\n  }, []);\n\n  // clear error state\n  // Function to clear the error state\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <SalesContext.Provider value={{ salesData, error }}>\n      {children}\n    </SalesContext.Provider>\n  );\n};"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,YAAY,gBAAGH,aAAa,CAAC,EAAE,CAAC;AAE7C,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;;EAEA;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;QACzC,IAAID,GAAG,CAACE,EAAE,EAAE;UACV,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;UAC7BR,YAAY,CAACO,IAAI,CAAC;QACpB;MACF,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZP,QAAQ,CAACO,GAAG,CAAC;QACbC,OAAO,CAACT,KAAK,CAACQ,GAAG,CAAC;MACpB;IACF,CAAC;IAEDN,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBT,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACER,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,SAAS;MAAEE;IAAM,CAAE;IAAAJ,QAAA,EAChDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACnB,EAAA,CAnCWF,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}